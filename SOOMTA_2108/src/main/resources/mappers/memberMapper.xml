<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.memberMapper">


<delete id="classDel" parameterType="string" >
	delete from purchase 
	where purchase_No = #{purchaseNo} 
</delete>


<select id="memClassCount" resultType="int" parameterType="string">
	select count(*) 
	from purchase
	where mem_Id = #{memId}
</select>


<select id="reviewCon" parameterType="string" resultType="Model.ReviewDTO">
	select class_Satisfy classSatisfy,tutor_Satisfy tutorSatisfy,
		review_Contents reviewContents,review_RegiDay reviewRegiDay
	from review
	where purchase_No = #{purchaseNo} 
</select>

<select id="classCon" parameterType="string" resultType="Model.ClassOrderDTO">
	select class_Category_L classCategoryL,class_Category_S classCategoryS,
		   class_Name className,class_Start classStart,class_End classEnd,
		   class_Total classTotal,class_Price classPrice,class_Way classWay,
		   class_Gender classGender,class_Introduce classIntroduce
	from Soomta_Class
	where class_No = #{classNo}
</select>

<insert id="reviewWrite" parameterType="Model.ReviewDTO">
	insert into review
		(Purchase_No,class_No,tutor_Satisfy,class_Satisfy,
		review_Contents,review_RegiDay,tutor_Id)
	values(#{purchaseNo},#{classNo},#{tutorSatisfy},
			#{classSatisfy},#{reviewContents},sysdate,#{tutorId})
</insert>

<select id="classOrderList" parameterType="string" resultType="Model.ClassOrderDTO">
	select sc.class_No classNo, sc.class_Name className,class_Way classWay ,class_Category_L classCategoryL,
		class_Category_S classCategoryS,class_Start classStart,class_End classEnd,
		class_Total classTotal,class_State classState,class_Satisfy classSatisfy,
		r.review_Contents reviewContents, p.Purchase_No PurchaseNo,p.purchase_Date purchaseDate
		,t.tutor_Id tutorId ,tutor_Area tutorArea ,class_City classCity,class_Area classArea,
		class_Price classPrice,class_Gender classGender,class_Introduce classIntroduce, cp.cnt countClassNo
        
	from Soomta_Class sc,purchase p,review r,tutor t , 
         (select class_No, count(*) cnt from purchase group by class_No) cp
	where sc.class_No = p.class_No 
    and sc.class_No = cp.class_No
	and   t.tutor_Id = sc.tutor_Id
	and   p.Purchase_No = r.Purchase_No(+)
	and   p.class_No = r.class_No(+)
	and   p.mem_Id = #{memId}
	order by PurchaseNo desc
</select>

<!-- 내정보 보기 -->
<select id="perData" parameterType="string" resultType="Model.MemberDTO">
	select mem_Id memId,mem_Name memName,mem_Pw memPw, mem_Since memSince, mem_Dob memDob, mem_Gender memGender, 
			mem_Phone memPhone, mem_Email memEmail ,mem_Area memArea,mem_Email_Ck memEmailCk
	from member 
	where mem_Id = #{memId} 
</select>

<!-- 비번 변경 -->
<update id="memPwUpdate" parameterType="Model.MemberDTO">
	update member
	set mem_Pw = #{memPw}
	where mem_Id = #{memId}
</update>

<!-- 탈퇴하기 -->
<delete id="memOut" parameterType="string">
	delete from member
	where  mem_Id = #{memId}
</delete>

<!-- 내정보 수정 -->
<update id="memUpdate" parameterType="Model.MemberDTO">
	update member
	set mem_Name = #{memName},
		mem_Phone = #{memPhone},
		mem_Email = #{memEmail},
		mem_Area = #{memArea},
		mem_Email_Ck = #{memEmailCk}
	where mem_Id = #{memId}
</update>


<!-- 가입-이지연 -->
<insert id="memInsert" parameterType="Model.MemberDTO">
	insert into member (mem_Id, mem_Pw, mem_Name , mem_Phone , mem_Gender , 
	mem_Dob , mem_Email , mem_Email_Ck , mem_Area , mem_Since) 
	values(#{memId}, #{memPw}, #{memName}, #{memPhone}, #{memGender}, 
	#{memDob}, #{memEmail}, 
	<if test="memEmailCk != null"> #{memEmailCk} </if>
	<if test="memEmailCk == null"> 'N' </if>
	, #{memArea}, sysdate)
</insert>
<select id="purchaseNo" resultType="string">
	select purchaseNo.nextval
	from dual
</select>
<insert id="purchaseInsert" parameterType="Model.PurchaseDTO">
	insert into purchase (purchase_No, class_No, mem_Id, tutor_Id, purchase_Date, purchase_Method, purchase_Information) 
	values(#{purchaseNo}, #{classNo}, #{memId}, #{tutorId}, sysdate, #{purchaseMethod}, #{purchaseInformation})
</insert>
</mapper>
